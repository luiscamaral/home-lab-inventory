name: watchtower

services:
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    hostname: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    environment:
      # Check for updates every 5 minutes (300 seconds)
      WATCHTOWER_POLL_INTERVAL: 300

      # Remove old images after updating
      WATCHTOWER_CLEANUP: "true"

      # Only monitor running containers
      WATCHTOWER_INCLUDE_STOPPED: "false"

      # Only update containers with com.centurylinklabs.watchtower.enable=true label
      WATCHTOWER_LABEL_ENABLE: "true"

      # Send notifications (optional - configure as needed)
      # WATCHTOWER_NOTIFICATIONS: email
      # WATCHTOWER_NOTIFICATION_EMAIL_FROM: notifications@yourdomain.com
      # WATCHTOWER_NOTIFICATION_EMAIL_TO: admin@yourdomain.com
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER: smtp.gmail.com
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: 587
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: your-email@gmail.com
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: your-app-password

      # Or use webhook notifications
      # WATCHTOWER_NOTIFICATIONS: webhook
      # WATCHTOWER_NOTIFICATION_URL: https://your-webhook-url.com/watchtower

      # Enable HTTP API for manual triggers (optional)
      WATCHTOWER_HTTP_API_UPDATE: "true"
      WATCHTOWER_HTTP_API_TOKEN: ${WATCHTOWER_API_TOKEN:-changeme}

      # Logging
      WATCHTOWER_LOG_LEVEL: info

      # Timezone
      TZ: America/Denver
    ports:
      # HTTP API port (only if using HTTP API)
      - "8080:8080"
    networks:
      - docker-servers-net
    labels:
      # Don't update Watchtower itself automatically
      com.centurylinklabs.watchtower.enable: "false"

networks:
  docker-servers-net:
    external: true
