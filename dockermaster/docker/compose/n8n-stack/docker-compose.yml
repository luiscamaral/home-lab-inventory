---
name: n8n-stack
networks:
  servers-net:
    name: docker-servers-net
    driver: macvlan
    external: true
services:
  postgres:
    image: pgvector/pgvector:pg15
    restart: unless-stopped
    healthcheck:
      test: [CMD-SHELL, pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB]
      interval: 5s
      timeout: 5s
      retries: 30
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    env_file: .env
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - GENERIC_TIMEZONE=America/Denver
      - WEBHOOK_URL=http://n8n.d.lcamaral.com;
      # expose custom nodes
      - N8N_CUSTOM_EXTENSIONS=/home/node/.n8n/custom
      # point LangChain / HTTP nodes at host-native Ollama
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    volumes:
      - n8n_data:/home/node/.n8n
      - ./custom:/home/node/.n8n/custom  # <- detailed below
    networks:
      servers-net:
        ipv4_address: 192.168.59.30
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [CMD-SHELL, curl -fs http://localhost:5678/healthz || exit 1]
      interval: 10s
      timeout: 5s
      retries: 15
volumes:
  pgdata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /nfs/dockermaster/volumes/n8n-stack.pgdata
  n8n_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /nfs/dockermaster/volumes/n8n-stack.n8n_data
