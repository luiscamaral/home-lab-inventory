# Python project configuration for home-lab-inventory repository
# This file configures Python tooling for any future Python scripts or utilities

[build-system]
requires = ["setuptools", "wheel"]

[project]
name = "home-lab-inventory"
description = "Home lab infrastructure inventory and management system"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [{name = "Luis Camaral", email = "luiscamaral@example.com"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Monitoring",
]
dynamic = ["version"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
^/(
  (
      \.eggs
    | \.git
    | \.history
    | \.claude
    | \.vscode
    | \.devcontainer
    | __pycache__
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_glob = [
    ".git/*",
    ".history/*",
    ".claude/*",
    ".vscode/*",
    ".devcontainer/*",
    "__pycache__/*",
    "build/*",
    "dist/*",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
per-file-ignores = [
    "__init__.py:F401",
]
exclude = [
    ".git",
    ".history",
    ".claude",
    ".vscode",
    ".devcontainer",
    "__pycache__",
    "build",
    "dist",
    ".pytest_cache",
    ".tox",
    "venv",
    "env",
]

[tool.pylint.main]
load-plugins = ["pylint.extensions.docparams"]
extension-pkg-whitelist = []
ignore-paths = [
    ".git",
    ".history",
    ".claude",
    ".vscode",
    ".devcontainer",
    "__pycache__",
    "build",
    "dist",
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "docker.*",
    "compose.*",
    "yaml.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "-ra",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    ".git/*",
    ".history/*",
    ".claude/*",
    ".vscode/*",
    ".devcontainer/*",
    "*/tests/*",
    "*/test_*.py",
    "*/*_test.py",
    "setup.py",
    "conftest.py",
    "__pycache__/*",
    "build/*",
    "dist/*",
    ".pytest_cache/*",
    ".tox/*",
    "venv/*",
    "env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = [
    ".git",
    ".history",
    ".claude",
    ".vscode",
    ".devcontainer",
    "tests",
    "__pycache__",
    "build",
    "dist",
]
skips = ["B101", "B601"]
